// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "https://vk.com/id159001355",
            "email": "sereja.noskin@yandex.ru"
        },
        "license": {
            "name": "AS IS (NO WARRANTY)"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/books": {
            "get": {
                "description": "Get a list of all books",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Info"
                ],
                "summary": "Get all records",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ds.Book"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ModelError"
                        }
                    }
                }
            },
            "post": {
                "description": "Adding a new book to database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Add"
                ],
                "summary": "Add a new book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Название книги",
                        "name": "Name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Цена книги",
                        "name": "Saleprice",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Год производства",
                        "name": "Year",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Тип книги",
                        "name": "Type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Срок годности",
                        "name": "Srokgodnost",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Цвет книги",
                        "name": "Color",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Покупатель",
                        "name": "Pokupatel",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Описание",
                        "name": "Description",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ModelBookCreated"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ModelError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a book via its uuid",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Change"
                ],
                "summary": "Delete a book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID книги",
                        "name": "UUID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ModelBookDeleted"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ModelError"
                        }
                    }
                }
            }
        },
        "/books/:uuid": {
            "get": {
                "description": "Get a price via uuid of a book",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Info"
                ],
                "summary": "Get price for a book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID книги",
                        "name": "UUID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ModelBookPrice"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ModelError"
                        }
                    }
                }
            },
            "put": {
                "description": "Change a price for a book via its uuid",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Change"
                ],
                "summary": "Change book price",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID книги",
                        "name": "UUID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Новая цена",
                        "name": "Price",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ModelPriceChanged"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ModelError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ds.Book": {
            "type": "object",
            "properties": {
                "Type": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pokupatel": {
                    "type": "string"
                },
                "Saleprice": {
                    "type": "integer"
                },
                "Srokgodnost": {
                    "type": "integer"
                },
                "uuid": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "models.ModelBookCreated": {
            "type": "object",
            "properties": {
                "success": {
                    "description": "success",
                    "type": "boolean"
                }
            }
        },
        "models.ModelBookDeleted": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "boolean"
                }
            }
        },
        "models.ModelBookPrice": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                }
            }
        },
        "models.ModelError": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "description",
                    "type": "string"
                },
                "error": {
                    "description": "error",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                }
            }
        },
        "models.ModelPriceChanged": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"https", "http"},
	Title:            "Book",
	Description:      "Showroom for japanese domestic market (JDM)",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
